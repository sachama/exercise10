---
- hosts: all
  become: True
  gather_facts: False

  pre_tasks:
    - name: fix for python interpreter for managed host
      include: tasks/fix-python.yml
    - name: installing flask_prometheus_metrics
      pip: name=flask_prometheus_metrics state=latest
  tasks:
    - include: 'tasks/main.yml'
  handlers:
    - include: 'handlers/main.yml'
  vars_files:
    - 'defaults/main.yml'

  vars:

    prometheus_components: [ "prometheus" ]
    #prometheus_components: [ "node_exporter" ]
    #prometheus_components: [ "alertmanager" ]
    # prometheus_components: [ "prometheus", "node_exporter", "alertmanager" ]
    #prometheus_version: git
    #prometheus_node_exporter_version: git
    #prometheus_alertmanager_version: git


    #prometheus_rule_files:
    #  this_is_rule_1_InstanceDown:
    #    src:  test/basic.rules
    #    dest: basic.rules


    prometheus_alertmanager_hostport: "localhost:9093"

    #prometheus_alertmanager_conf: test/alertmanager.yml.j2

  post_tasks:
    - name: copy file_sd
      copy: src="{{ playbook_dir }}/test/file_sd.yml"  dest={{ prometheus_file_sd_config_path }}
    #- name: Install netstat
    #  yum: name=net-tools state=present
    - name: installing flask
      pip: name=flask state=latest  
    #- name: installing flask_cors
    #  pip: name=flask_cors state=latest
    - name: installing prometheus_flask_exporter
      pip: name=prometheus_flask_exporter state=latest
    - name: installing flask_prometheus_metrics
      pip: name=flask_prometheus_metrics state=latest
    #- name: run flask app
    #  shell: |
    #    nohup python3 /vagrant/webapp.py > log.txt 2>&1 &
    - name: webapp | Create Unit file
      template: src=webapp.service.j2 dest=/lib/systemd/system/webapp.service mode=644
      notify:
        - reload systemctl
    - name: webapp | Start webapp
      service: name=webapp.service state=started enabled=yes


    - name: Install nginx
      yum: name=nginx state=present

    - name: Create webapp nginx config file
      copy:
          dest: /etc/nginx/conf.d/webapp.conf
          mode: 0755
          content: |
            server {
              listen 80;
              listen [::]:80;
              server_name localhost;
            
              location /app/ {
                  proxy_set_header Host $host;
                  proxy_set_header X-Forwarded-For $remote_addr;
                  proxy_pass http://localhost:6000/app;
              }
            
              location /health/ {
                  proxy_set_header Host $host;
                  proxy_set_header X-Forwarded-For $remote_addr;
                  proxy_pass http://localhost:6000/metrics;
              }
            
              location / {
                  proxy_pass http://localhost:3000/;
              }
            
            }    
    - name: restart nginx
      service: name=nginx state=restarted            
      notify:
        - Enable nginx
    
    # prometheus
    #- name: Start prometheus
    #  yum: name=grafana state=present update_cache=yes
    #  notify:
    #    - Start prometheus
    #    - Enable prometheus

    # grafana
    - name: Install Grafana 
      yum: name=grafana state=present update_cache=yes
      notify:
        - Enable grafana

    - name: replace line
      lineinfile: 
        path: /etc/grafana/grafana.ini 
        regexp: '^admin_password(.*)$' 
        line: "admin_password = {{ grafana_admin }}"
        backrefs: yes
    
    - name: Start service grafana if not started
      ansible.builtin.service:
        name: grafana-server
        state: started     

    - name: create prometheus datasource for org 1 - main
      community.grafana.grafana_datasource:
        name: webapp_prometheus
        url: http://localhost:3000
        grafana_user: "admin"
        grafana_password: "{{ grafana_admin }}"
        org_id: "1"        
        ds_type: prometheus
        ds_url: http://localhost:7090
        access: direct        

    - name: Import Grafana dashboard to org 1 - main
      community.grafana.grafana_dashboard:
        url: http://localhost:3000
        grafana_user: "admin"
        grafana_password: "{{ grafana_admin }}"
        org_id: 1
        overwrite: yes
        path: /vagrant/webapp_dashboard.json

    # create grafana org 2, create datasource, create dashboard
    - name: Create a Grafana organization
      community.grafana.grafana_organization:
        url: http://localhost:3000
        grafana_user: "admin"
        grafana_password: "{{ grafana_admin }}"        
        name: orgtest
        state: present
        validate_certs: no 

    - name: create prometheus datasource for org 2
      community.grafana.grafana_datasource:
        name: webapp_prometheus_2
        url: http://localhost:3000
        grafana_user: "admin"
        grafana_password: "{{ grafana_admin }}"
        org_id: "2"
        ds_type: prometheus
        ds_url: http://localhost:7090
        access: direct

    - name: Import Grafana dashboard to org 2
      community.grafana.grafana_dashboard:
        url: http://localhost:3000
        grafana_user: "admin"
        grafana_password: "{{ grafana_admin }}"
        org_id: 2
        overwrite: yes
        path: /vagrant/webapp_dashboard_2.json